// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//npx prisma migrate dev --name <<nombre>>
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Libro {
  id                Int      @id @default(autoincrement())
  titulo            String
  fecha_publicacion DateTime
  numero_paginas    Int
  sinopsis          String
  objetivos         String
  resumen           String
  portada           String

  paisId Int
  pais   Pais @relation(fields: [paisId], references: [id])

  autorId Int
  autor   Autor @relation(fields: [autorId], references: [id])

  editorialId Int
  editorial   Editorial @relation(fields: [editorialId], references: [id])

  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id])

  resenias Resenia[]

  favoritos Favorito[]

  progreso Progreso[]

  recordatorio Recordatorio[]
}

model Autor {
  id     Int     @id @default(autoincrement())
  nombre String
  fotoPerfil String
  libros Libro[]
  autoresFavoritos FavoritoAutor[]
}

model Editorial {
  id     Int     @id @default(autoincrement())
  nombre String
  libros Libro[]
}

model Categoria {
  id     Int     @id @default(autoincrement())
  nombre String
  libros Libro[]
}

model Pais {
  id     Int    @id @default(autoincrement())
  nombre String

  libros Libro[]
}

model Usuario {
  id            Int    @id @default(autoincrement())
  nombre        String
  apellido      String
  nombreUsuario String @unique
  correo        String @unique
  contrasenia   String
  imagenPerfil  Bytes?
  fechaNacimiento DateTime?

  resenias Resenia[]

  favoritos Favorito[]

  autoresFavoritos FavoritoAutor[]

  progreso Progreso[]

  recordatorio Recordatorio[]
}

model Resenia {
  id                Int      @id @default(autoincrement())
  descripcion       String?
  calificacion      Int
  fecha_publicacion DateTime @default(now())

  usuarioId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])

  libroId Int
  libro   Libro @relation(fields: [libroId], references: [id])
}

model Favorito {
  id Int @id @default(autoincrement())
  usuarioId Int
  libroId   Int

  usuario Usuario @relation(fields: [usuarioId], references: [id])
  libro   Libro   @relation(fields: [libroId], references: [id])

  @@unique([usuarioId, libroId])
}

model FavoritoAutor {
  id             Int     @id @default(autoincrement())
  usuarioId      Int
  autorId        Int

  usuario        Usuario @relation(fields: [usuarioId], references: [id])
  autor          Autor   @relation(fields: [autorId], references: [id])

  @@unique([usuarioId, autorId])
}

model Progreso {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  libroId    Int
  tiempo     DateTime // Se almacenara como `HH:MM:SS`

  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  libro      Libro    @relation(fields: [libroId], references: [id])

  @@unique([usuarioId, libroId])
}

model Recordatorio {
  id          Int      @id @default(autoincrement())
  usuarioId   Int
  libroId     Int
  fechaHora   DateTime
  descripcion String

  usuario     Usuario  @relation(fields: [usuarioId], references: [id])
  libro       Libro    @relation(fields: [libroId], references: [id])

  @@unique([usuarioId, libroId])
}
